##########################################################
#	My standard bashrc
##########################################################
#set a civilized mode :)
set -o vi
export EDITOR=vi
##################################################################
#	Pull in some standard dotfiles
source ${HOME}/.dotfiles/bash/git-prompt.sh

# Unify history
export PROMPT_COMMAND='history -a'

##################################################################
#aliases I want everywhere
alias ctc='cd ${PWD} && clear'
alias eigo="export LANG=C;export LC_ALL=C"
alias src="echo \"Updating Settings\" && . ~/.bash_profile"
alias vundleup="/usr/bin/vim +BundleInstall +qall"
alias tmux="TERM=screen-256color-bce tmux"

# handle the various vimwiki entries
alias diary="cd ${HOME}/Documents/VimWiki && git pull origin master && vim +VimwikiMakeDiaryNote && git commit -a -m\"diary entry\" && git push origin master "
alias wiki="cd ${HOME}/Documents/VimWiki && git pull origin master && vim +VimwikiIndex && git commit -a -m\"wiki entry\" && git push origin master "
alias vw="cd ${HOME}/Documents/VimWiki && vim +VimwikiIndex "
alias gdiary="cd ~/Code/Google/VimWiki &&  vim  +VimwikiMakeDiaryNote ~/Code/Google/VimWiki/index.md"
alias gwiki="cd ~/Code/Google/VimWiki &&  vim ~/Code/Google/VimWiki/index.md"
alias pdiary="cd ~/Documents/Diary/ && vim +VimwikiMakeDiaryNote ~/Documents/Diary/index.md"

##################################################################
# fix some GPG stuff
GPG_TTY=`tty` 
export GPG_TTY 
##################################################################
#Ubuntu specific change for your needs
if [ -e /lib/terminfo/x/xterm-256color ]; then
	export TERM="xterm-256color"
else
	export TERM="xterm"
fi
##################################################################

# tfenv 
if [[ -f ${HOME}/.tfenv/bin/tfenv ]] ; then
	PATH=${PATH}:${HOME}/.tfenv/bin/
fi


if [[ -d ${HOME}/Code/go ]] ; then
	export GOPATH=${HOME}/Code/go
fi


if [[ -d ${HOME}/Code/go/bin ]] ; then
	PATH=${PATH}:${HOME}/Code/go/bin
fi

if [[ -d ${HOME}/.local/bin ]] ; then
	PATH=${PATH}:${HOME}/.local/bin
fi

# Ensure RVM RUNS LAST
#rvm
#if [[ -s ${HOME}/.rvm/scripts/rvm ]] ; then
#	PATH=${HOME}/bin:${PATH}		# Add my bin path
#	PATH=${HOME}/.rvm/bin:${PATH} 	# Add RVM to PATH for scripting
#	source ${HOME}/.rvm/scripts/rvm 
#fi
#



##################################################################
# Get stuff based on wireless network connection

# or hostname
HOSTNAME=`hostname`
# source in any host specific stuff
if [ -f ${HOME}/.dotfiles/bash/aliases/${HOSTNAME} ]; then
	.  ${HOME}/.dotfiles/bash/aliases/${HOSTNAME} 
fi
# source in any host specific stuff that I don't want on github
if [ -f ${HOME}/.dotfiles/bash/aliases/${HOSTNAME}.secret ]; then
	.  ${HOME}/.dotfiles/bash/aliases/${HOSTNAME}.secret
fi
# source in any host specific stuff that I don't want on github
if [ -x /usr/bin/nmcli ]; then
	if /usr/bin/nmcli devices 2>/dev/null |grep -q wlan0  ; then 
		WIFI=`nmcli device show wlan0|grep GENERAL.CONNECTION |awk '{print $NF}'`
	fi
fi
if [ "X${WIFI}" != "X" ] ; then
	if [ -f ${HOME}/.dotfiles/bash/aliases/${WIFI}.secret ]; then
		.  ${HOME}/.dotfiles/bash/aliases/${WIFI}.secret
	fi
fi

if [ -f /tmp/.${USER}.iru ] ; then
	IRU=`cat /tmp/.${USER}.iru`
fi
if [ "X${IRU}" != "X" ] ; then
	if [ -f ${HOME}/.dotfiles/bash/aliases/${IRU}.secret ]; then
		.  ${HOME}/.dotfiles/bash/aliases/${IRU}.secret
	fi
fi

##################################################################
# create our temporrary vim dir
if ! [ -d ${HOME}/tmp/vim ] ; then
	mkdir -p ${HOME}/tmp/vim
fi

# Git stuff
source ${HOME}/.dotfiles/bash/git-completion.bash
alias gitclean='git branch --merged master | grep -v "\* master" | xargs -n 1 git branch -d '

##################################################################
# Set the TMUX window title to the host being SSH'd to!!
ssh() {
    if [ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" = "tmux" ]; then
	    short_name=`echo $* |awk -F'.' '{print $1}'`
	    tmux rename-window "${short_name}"
            command ssh "$@"
            tmux set-window-option automatic-rename "on" 1>/dev/null
    else
            command ssh "$@"
    fi
}

# Set the tmux title eg add to .rvmrc settitle REPO
st() {
	if  [ "${TMUX_PANE}X" != "X" ] ; then
		printf "\033k$1\033\\"
	fi
}

####################################################################################################################################
# Grab from the teamplate for mybash

# Path to your oh-my-bash installation.
export OSH=$HOME/.oh-my-bash

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-bash is loaded.
OSH_THEME="powerline"

# Uncomment the following line to use case-sensitive completion.
 CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_OSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $OSH/custom?
# OSH_CUSTOM=/path/to/new-custom-folder

# Which completions would you like to load? (completions can be found in ~/.oh-my-bash/completions/*)
# Custom completions may be added to ~/.oh-my-bash/custom/completions/
# Example format: completions=(ssh git bundler gem pip pip3)
# Add wisely, as too many completions slow down shell startup.
completions=(
  git
  composer
  ssh
)

# Which aliases would you like to load? (aliases can be found in ~/.oh-my-bash/aliases/*)
# Custom aliases may be added to ~/.oh-my-bash/custom/aliases/
# Example format: aliases=(vagrant composer git-avh)
# Add wisely, as too many aliases slow down shell startup.
aliases=()

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-bash/plugins/*)
# Custom plugins may be added to ~/.oh-my-bash/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  bashmarks
)

source $OSH/oh-my-bash.sh

##############################################################################
# Final mague
##############################################################################

# Set my bin first
if [[ -d ${HOME}/bin ]] ; then
	PATH=${HOME}/bin:${PATH}
fi

if [ -f ${HOME}/.cargo/env ]; then
	. "$HOME/.cargo/env"
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${HOME}/google-cloud-sdk/path.bash.inc" ]; then 
	. "${HOME}/google-cloud-sdk/path.bash.inc"
fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/chris/google-cloud-sdk/completion.bash.inc' ]; then . '/home/chris/google-cloud-sdk/completion.bash.inc'; fi

# Neovim
if [ -f "/usr/bin/nvim" ]; then 
	alias vim=/usr/bin/nvim
fi
